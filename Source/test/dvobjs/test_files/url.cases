# test cases for methods implemented 0.9.22+ of $URL
negative:
    $URL.parse_query()
    ArgumentMissed

negative:
    $URL.parse_query(null)
    WrongDataType

negative:
    $URL.parse_query('', 'invalid')
    InvalidValue

negative:
    $URL.parse_query('', 'object auto rfc1738', null)
    WrongDataType

positive:
    $URL.parse_query('')
    {}

positive:
    $URL.parse_query('a=1&b=2')
    { 'a': '1', 'b': '2' }

positive:
    $URL.parse_query('a=1&b=2', 'array')
    ['1', '2']

positive:
    $URL.parse_query('name=%e5%bc%a0%e4%b8%89&age=25')
    { 'name': '张三', 'age': '25' }

positive:
    $URL.parse_query('name=%e5%bc%a0%e4%b8%89&age=25', 'array')
    ['张三', '25']

positive:
    $URL.parse_query('data=%48%65%6C%6C%6F', 'object binary')
    { 'data': bx48656C6C6F }

positive:
    $URL.parse_query('data=bx48656C6C6F', 'object string')
    { 'data': 'bx48656C6C6F' }

positive:
    $URL.parse_query('name=John+Smith', 'object auto rfc1738')
    { 'name': 'John Smith' }

positive:
    $URL.parse_query('name=John%20Smith', 'object auto rfc3986')
    { 'name': 'John Smith' }

positive:
    $URL.parse_query('a=1;b=2', 'object auto rfc1738', ';')
    { 'a': '1', 'b': '2' }

positive:
    $URL.parse_query('name=%e5%bc%a0%e4%b8%89;age=25', 'object auto rfc1738', ';')
    { 'name': '张三', 'age': '25' }

positive:
    $URL.parse_query('name=%e5%bc%a0%e4%b8%89;age=25', 'array auto rfc1738', ';')
    ['张三', '25']

positive:
    $URL.parse_query('data=Hello%20World', 'object binary rfc3986')
    { 'data': bx48656C6C6F20576F726C64 }

positive:
    $URL.parse_query('data=Hello+World', 'object binary rfc1738')
    { 'data': bx48656C6C6F20576F726C64 }

positive:
    $URL.parse_query('missing_value=')
    {'missing_value': ''}

positive:
    $URL.parse_query('missing_separator')
    {}

negative:
    $URL.parse_query('invalid_binary=%ZZ')
    BadEncoding

negative:
    $URL.parse()
    ArgumentMissed

negative:
    $URL.parse(null)
    WrongDataType

negative:
    $URL.parse('')
    InvalidValue

negative:
    $URL.parse('email:', 'invalid')
    InvalidValue

negative:
    $URL.parse('email:', 'invalid', null)
    WrongDataType

negative:
    $URL.parse('email:', 'all', 'foo')
    InvalidValue

positive:
    $URL.parse('http://user:pass@example.com:8080/path?query=1#hash')
    { 'scheme': 'http', 'hostname': 'example.com', 'port': 8080, 'username': 'user', 'password': 'pass', 'path': '/path', 'query': 'query=1', 'fragment': 'hash' }

positive:
    $URL.parse('https://example.com')
    { 'scheme': 'https', 'hostname': 'example.com', 'port': null, 'username': null, 'password': null, 'path': '/', 'query': null, 'fragment': null }

positive:
    $URL.parse('https://user:pass@example.com:8080/path?foo=bar#anchor')
    { 'scheme': 'https', 'hostname': 'example.com', 'port': 8080, 'username': 'user', 'password': 'pass', 'path': '/path', 'query': 'foo=bar', 'fragment': 'anchor' }

positive:
    $URL.parse('email://postmaster@hvml.org')
    { 'scheme': 'email', 'hostname': 'hvml.org', 'port': null, 'username': 'postmaster', 'password': null, 'path': null, 'query': null, 'fragment': null }

positive:
    $URL.parse('http://example.com:8080', 'port')
    8080

positive:
    $URL.parse('http://example.com:8080', 'scheme')
    'http'

positive:
    $URL.parse('http://user:pass@example.com', 'username password')
    { 'username': 'user', 'password': 'pass' }

positive:
    $URL.parse('http://example.com/path?a=1#hash', 'path query fragment')
    { 'path': '/path', 'query': 'a=1', 'fragment': 'hash' }

positive:
    $URL.parse('ftp://example.com', 'hostname')
    'example.com'

positive:
    $URL.parse('http://[2001:db8::1]', 'hostname') 
    '[2001:db8::1]'

positive:
    $URL.parse('http://localhost:8080/test?debug=1#section1', 'hostname port path')
    { 'hostname': 'localhost', 'port': 8080, 'path': '/test' }

positive:
    $URL.parse('https://example.cn/中文')
    { 'scheme': 'https', 'hostname': 'example.cn', 'port': null, 'username': null, 'password': null, 'path': '/%E4%B8%AD%E6%96%87', 'query': null, 'fragment': null }

positive:
    $URL.parse('https://xn--0zwm56d.xn--5tzm5g.xn--fiqs8s/%E8%B7%AF%E5%BE%84?%E5%85%B3%E9%94%AE%E5%AD%97=%E6%B5%8B%E8%AF%95#%E7%89%87%E6%AE%B5', 'all', 'hostname path query fragment')
    { 'scheme': 'https', 'hostname': '测试.网站.中国', 'port': null, 'username': null, 'password': null, 'path': '/路径', 'query': '关键字=测试', 'fragment': '片段' }

positive:
    $URL.parse('https://xn--0zwm56d.xn--5tzm5g.xn--fiqs8s/%E8%B7%AF%E5%BE%84?%E5%85%B3%E9%94%AE%E5%AD%97=%E6%B5%8B%E8%AF%95#%E7%89%87%E6%AE%B5', 'query')
    '%E5%85%B3%E9%94%AE%E5%AD%97=%E6%B5%8B%E8%AF%95'

positive:
    $URL.parse('https://xn--0zwm56d.xn--5tzm5g.xn--fiqs8s/%E8%B7%AF%E5%BE%84?%E5%85%B3%E9%94%AE%E5%AD%97=%E6%B5%8B%E8%AF%95#%E7%89%87%E6%AE%B5', 'query', 'query')
    '关键字=测试'

positive:
    $URL.parse('https://xn--0zwm56d.xn--5tzm5g.xn--fiqs8s/%E8%B7%AF%E5%BE%84?%E5%85%B3%E9%94%AE%E5%AD%97=%E6%B5%8B%E8%AF%95#%E7%89%87%E6%AE%B5', 'fragment')
    '%E7%89%87%E6%AE%B5'

positive:
    $URL.parse('https://xn--0zwm56d.xn--5tzm5g.xn--fiqs8s/%E8%B7%AF%E5%BE%84?%E5%85%B3%E9%94%AE%E5%AD%97=%E6%B5%8B%E8%AF%95#%E7%89%87%E6%AE%B5', 'fragment', 'fragment')
    '片段'

positive:
    $URL.parse('https://xn--0zwm56d.xn--5tzm5g.xn--fiqs8s/%E8%B7%AF%E5%BE%84?%E5%85%B3%E9%94%AE%E5%AD%97=%E6%B5%8B%E8%AF%95#%E7%89%87%E6%AE%B5', 'path')
    '/%E8%B7%AF%E5%BE%84'

positive:
    $URL.parse('https://xn--0zwm56d.xn--5tzm5g.xn--fiqs8s/%E8%B7%AF%E5%BE%84?%E5%85%B3%E9%94%AE%E5%AD%97=%E6%B5%8B%E8%AF%95#%E7%89%87%E6%AE%B5', 'path', 'path')
    '/路径'

positive:
    $URL.parse('https://xn--0zwm56d.xn--5tzm5g.xn--fiqs8s/%E8%B7%AF%E5%BE%84?%E5%85%B3%E9%94%AE%E5%AD%97=%E6%B5%8B%E8%AF%95#%E7%89%87%E6%AE%B5', 'hostname')
    'xn--0zwm56d.xn--5tzm5g.xn--fiqs8s'

positive:
    $URL.parse('https://xn--0zwm56d.xn--5tzm5g.xn--fiqs8s/%E8%B7%AF%E5%BE%84?%E5%85%B3%E9%94%AE%E5%AD%97=%E6%B5%8B%E8%AF%95#%E7%89%87%E6%AE%B5', 'hostname', 'hostname')
    '测试.网站.中国'

negative:
    $URL.assembly()
    ArgumentMissed

negative:
    $URL.assembly(null)
    WrongDataType

negative:
    $URL.assembly({})
    InvalidValue

negative:
    $URL.assembly({ "foo": "bar" })
    InvalidValue

negative:
    $URL.assembly({ "scheme": "http", "hostname": "" })
    InvalidValue

positive:
    $URL.assembly({ "scheme": "https", "hostname": "example.com" })
    'https://example.com/'

positive:
    $URL.assembly({ "scheme": "http", "hostname": "localhost", "port": 8080, "path": "/api/v1/users", "query": "page=1&size=10", "fragment": "top" })
    'http://localhost:8080/api/v1/users?page=1&size=10#top'

positive:
    $URL.assembly({ "scheme": "ftp", "username": "admin", "password": "123456", "hostname": "ftp.example.com", "port": 21, "path": "/public" })
    'ftp://admin:123456@ftp.example.com/public'

positive:
    $URL.assembly({ "scheme": "ftp", "username": "admin", "password": "123456", "hostname": "ftp.example.com", "port": 2021, "path": "/public" })
    'ftp://admin:123456@ftp.example.com:2021/public'

positive:
    $URL.assembly({ "scheme": "https", "hostname": "api.example.com", "path": "/users/123", "query": "fields=name%2Cemail&format=json" })
    'https://api.example.com/users/123?fields=name%2Cemail&format=json'

positive:
    $URL.assembly({ "scheme": "http", "hostname": "test.website.cn", "path": "/%E8%B7%AF%E5%BE%84", "query": "%E5%85%B3%E9%94%AE%E5%AD%97=%E6%B5%8B%E8%AF%95", "fragment": "%E7%89%87%E6%AE%B5" })
    'http://test.website.cn/%E8%B7%AF%E5%BE%84?%E5%85%B3%E9%94%AE%E5%AD%97=%E6%B5%8B%E8%AF%95#%E7%89%87%E6%AE%B5'

positive:
    $URL.assembly({ "scheme": "http", "hostname": "测试.网站.中国", "path": "/路径", "query": "关键词1=值&关键词2=值", "fragment": "片段" })
    'http://xn--0zwm56d.xn--5tzm5g.xn--fiqs8s\/%C3%A8%C2%B7%C2%AF%C3%A5%C2%BE%C2%84?%C3%A5%C2%85%C2%B3%C3%A9%C2%94%C2%AE%C3%A8%C2%AF%C2%8D1=%C3%A5%C2%80%C2%BC&%C3%A5%C2%85%C2%B3%C3%A9%C2%94%C2%AE%C3%A8%C2%AF%C2%8D2=%C3%A5%C2%80%C2%BC#%C3%A7%C2%89%C2%87%C3%A6%C2%AE%C2%B5'

