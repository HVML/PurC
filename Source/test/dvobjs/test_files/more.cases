# test cases for methods implemented 0.9.22+ of $STR and $DATA
positive:
    $L.gt($DATA.memsize, 0)
    true

positive:
    $L.eq($DATA.memsize, $DATA.memsize(null))
    true

positive:
    $L.gt($DATA.memsize([]), $DATA.memsize(null))
    true

positive:
    $L.ge($DATA.memsize({}), $DATA.memsize(3))
    true

positive:
    $L.ge($DATA.memsize([{}]), $DATA.memsize([]))
    true

positive:
    $L.ge($DATA.memsize({'a': []}), $DATA.memsize({}))
    true

positive:
    $L.gt($DATA.memsize('this is a very long text; this is a very long text; this is a very long text'), $DATA.memsize('a short text'))
    true

negative:
    $DATA.makebytesbuffer()
    ArgumentMissed

negative:
    $DATA.makebytesbuffer(null)
    WrongDataType

positive:
    $DATA.type($DATA.makebytesbuffer(1024))
    'bsequence'

negative:
    $DATA.append2bytesbuffer()
    ArgumentMissed

negative:
    $DATA.append2bytesbuffer(null)
    ArgumentMissed

negative:
    $DATA.append2bytesbuffer(null, null)
    WrongDataType

negative:
    $DATA.append2bytesbuffer(bx1122, null)
    WrongDataType

negative:
    $DATA.append2bytesbuffer(bx1122, bx00, 'foo', null, null)
    InvalidValue

negative:
    $DATA.append2bytesbuffer(bx1122, bx00, 'all', 0, null)
    WrongDataType

negative:
    $DATA.append2bytesbuffer(bx1122, bx00, 'all', 0, 2)
    InvalidValue

positive:
    $DATA.append2bytesbuffer(bx1122, bx00, 'all')
    1UL

positive:
    $DATA.append2bytesbuffer(bx1122, '', 'utf8-chars', 0, 0)
    0UL

negative:
    $DATA.append2bytesbuffer(bx, '中华人民共和国万岁万岁万万岁！', 'all', 0, 0)
    TooLong

negative:
    $DATA.append2bytesbuffer(bx, '中华人民共和国万岁万岁万万岁！')
    TooLong

positive:
    $RUNNER.user(! "myBuffer", $DATA.makebytesbuffer(40) )
    true

positive:
    $DATA.append2bytesbuffer($RUNNER.myObj.myBuffer, bxE4B8ADE58D8EE4BABAE6B091E585B1E5928CE59BBD, 'utf8-chars', 0, 0)
    21UL

negative:
    $DATA.append2bytesbuffer($RUNNER.myObj.myBuffer, bxE4B8ADE58D8EE4BABAE6B091E585B1E5928CE59BBD, 'all', 0, 0)
    TooLong

negative:
    $DATA.append2bytesbuffer($RUNNER.myObj.myBuffer, bxE4B8ADE58D8EE4BABAE6B091E585B1E5928CE59BBD)
    TooLong

positive:
    $DATA.append2bytesbuffer($RUNNER.myObj.myBuffer, bxE4B8ADE58D8EE4BABAE6B091E585B1E5928CE5, 'utf8-chars')
    18UL

positive:
    $DATA.unpack("utf8", $RUNNER.myObj.myBuffer)
    '中华人民共和国中华人民共和'

negative:
    $DATA.rollbytesbuffer()
    ArgumentMissed

negative:
    $DATA.rollbytesbuffer(null)
    WrongDataType

negative:
    $DATA.rollbytesbuffer(bx)
    InvalidValue

positive:
    $DATA.rollbytesbuffer($RUNNER.myObj.myBuffer, -1)
    0UL

positive:
    $RUNNER.myObj.myBuffer
    bx

positive:
    $DATA.append2bytesbuffer($RUNNER.myObj.myBuffer, bx0011223344)
    5UL

negative:
    $DATA.rollbytesbuffer($RUNNER.myObj.myBuffer, 6)
    InvalidValue

positive:
    $DATA.rollbytesbuffer($RUNNER.myObj.myBuffer, 1)
    4UL

positive:
    $RUNNER.myObj.myBuffer
    bx11223344

negative:
    $RUNNER.enablelog()
    ArgumentMissed

negative:
    $RUNNER.enablelog(null)
    WrongDataType

negative:
    $RUNNER.enablelog('all', null)
    WrongDataType

negative:
    $RUNNER.enablelog('foo', 'stderr')
    InvalidValue

negative:
    $RUNNER.enablelog('all', 'foo')
    InvalidValue

negative:
    $RUNNER.logmsg
    ArgumentMissed

negative:
    $RUNNER.logmsg(null)
    WrongDataType

negative:
    $RUNNER.logmsg('A log message', null)
    WrongDataType

negative:
    $RUNNER.logmsg('A log message', 'foo')
    InvalidValue

positive:
    $RUNNER.enablelog('emerg error')
    true

positive:
    $RUNNER.logmsg('This is a log message (info level); you will not see this log message.')
    true

positive:
    $RUNNER.logmsg('This is a log message (error level)', 'error')
    true

positive:
    $RUNNER.enablelog('all')
    true

positive:
    $RUNNER.logmsg('This is a log message (info level).')
    true

negative:
    $STR.explode()
    ArgumentMissed

negative:
    $STR.explode(null)
    WrongDataType

positive:
    $STR.explode('')
    []

positive:
    $STR.explode('beijing\n \nshanghai:guangzhou', '\n \n', 2)
    ['beijing', 'shanghai:guangzhou']

positive:
    $STR.explode('beijing:shanghai:guangzhou', ':')
    ['beijing', 'shanghai', 'guangzhou']

positive:
    $STR.explode('1, 2, 3, ', ', ')
    ['1', '2', '3', '']

positive:
    $STR.explode('汉字')
    ['汉', '字']

positive:
    $STR.explode('中华人民共和国', '', 2)
    ['中', '华人民共和国']

positive:
    $STR.explode('中华人民共和国', '', -5)
    ['中', '华']

positive:
    $STR.explode(', , , ', ', ')
    ['', '', '', '']

positive:
    $STR.explode('汉字', '\n\n')
    ['汉字']

positive:
    $STR.explode('汉\n\n字', '\n\n')
    ['汉', '字']

positive:
    $STR.explode('中华\n\n人民\n\n共和国', '\n\n', 4)
    ['中华', '人民', '共和国']

positive:
    $STR.explode('中华\n\n人民\n\n共和国', '\n\n', 3)
    ['中华', '人民', '共和国']

positive:
    $STR.explode('中华\n\n人民\n\n共和国', '\n\n', 2)
    ['中华', '人民\n\n共和国']

positive:
    $STR.explode('中华\n\n人民\n\n共和国', '\n\n', -2)
    ['中华']

positive:
    $STR.explode('中华\n\n人民\n\n共和国', '\n\n', -3)
    []

positive:
    $STR.explode('中华\n\n人民\n\n共和国', '\n\n', -4)
    []

negative:
    $STR.implode()
    ArgumentMissed

negative:
    $STR.implode(null)
    WrongDataType

negative:
    $STR.implode([], null)
    WrongDataType

positive:
    $STR.implode([])
    ''

positive:
    $STR.implode(['beijing', 'shanghai', 'guangzhou'], ', ')
    'beijing, shanghai, guangzhou'

positive:
    $STR.implode([1, 2, 3, ''], ', ')
    '1, 2, 3, '

positive:
    $STR.implode(["root", 'x', 0, 0, 'root', "/root", "/bin/bash"], ':')
    'root:x:0:0:root:/root:/bin/bash'

positive:
    $STR.implode(['汉', '字'])
    '汉字'

negative:
    $STR.format_c()
    ArgumentMissed

negative:
    $STR.format_c('')
    ArgumentMissed

negative:
    $STR.format_c(null, 5)
    WrongDataType

negative:
    $STR.format_c('%s/%s', 16)
    WrongDataType

positive:
    $STR.format_c('%x', 16)
    '10'

positive:
    $STR.format_c('Tom is %d years old, while Jerry is %d years old.', 9, 7)
    'Tom is 9 years old, while Jerry is 7 years old.'

positive:
$STR.format_c('Tom is %d years old, while Jerry is %d years old.', [9, 7])
    'Tom is 9 years old, while Jerry is 7 years old.'

positive:
    $STR.format_c('no format characters', 16)
    'no format characters'

positive:
    $STR.format_c('%s/%d', 'Tom', 16)
    'Tom/16'

negative:
    $STR.trim()
    ArgumentMissed

negative:
    $STR.trim(null)
    WrongDataType

negative:
    $STR.trim('', null)
    WrongDataType

negative:
    $STR.trim('', null, null)
    WrongDataType

negative:
    $STR.trim('', '', '')
    InvalidValue

negative:
    $STR.trim('', 'foo', '')
    InvalidValue

positive:
    $STR.trim('', 'left', '')
    ''

positive:
    $STR.trim('', 'both', '')
    ''

positive:
    $STR.trim('\n foo bar \t')
    'foo bar'

positive:
    $STR.trim('\n foo bar \t', 'left')
    'foo bar \t'

positive:
    $STR.trim('\n foo bar \t', 'right')
    '\n foo bar'

positive:
    $STR.trim('张三李四', 'left', '张李')
    '三李四'

positive:
    $STR.trim('张三李四', 'right', '张李')
    '张三李四'

positive:
    $STR.trim(' 张三李四 ', 'both', ' 张四')
    '三李'

positive:
    $DATA.serialize($DATA.parse(']'))
    '"<undefined>"'

positive:
    $STR.format_c('Tom is %03d years old, while Jerry is %03d years old.', 9, 7)
    'Tom is 009 years old, while Jerry is 007 years old.'

negative:
    $STR.replace(null)
    ArgumentMissed

negative:
    $STR.replace(null, null, null)
    WrongDataType

negative:
    $STR.replace('美国、英国', ['美国', null], ['中国'])
    WrongDataType

negative:
    $STR.replace('美国、英国', ['美国', ''], ['中国'])
    InvalidValue

positive:
    $STR.replace('tom, TOM, ToM, and Jerry', 'TOM', 'Tom', true)
    'Tom, Tom, Tom, and Jerry'

positive:
    $STR.replace(['tom and Jerray', 'TOM and Amy'], 'TOM', 'Tom', true)
    ['Tom and Jerray', 'Tom and Amy']

positive:
    $STR.replace('Amy, TOM, ToM, and Jerry', 'TOM', 'Tom', true)
    'Amy, Tom, Tom, and Jerry'

positive:
    $STR.replace('美国、英国', ['美国', '英国'], ['中国', '中国'])
    '中国、中国'

positive:
    $STR.replace('美国、英国', ['美国', '英国'], ['中国'])
    '中国、'

positive:
    $STR.replace('Hello World of HVML', ["a", "e", "i", "o", "u", "A", "E", "I", "O", "U"], '')
    'Hll Wrld f HVML'

positive:
    $STR.replace('You should eat fruits, vegetables, and fiber every day.', ['should', "fruits", "vegetables", "fiber"], ['should not', "pizza", "beer", "ice cream"])
    'You should not eat pizza, beer, and ice cream every day.'

positive:
    $STR.replace('A', ['A', 'B', 'C', 'D', 'E'], ['B', 'C', 'D', 'E', 'F'])
    'F'

positive:
    $DATA.is_container
    false

positive:
    $DATA.is_container([])
    true

positive:
    $DATA.numerify('00123')
    123

