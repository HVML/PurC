# test cases POSIX methods of $SYS
negative:
    $SYS.pipe(null)
    WrongDataType

negative:
    $SYS.pipe('foo')
    InvalidValue

negative:
    $SYS.fdflags()
    ArgumentMissed

negative:
    $SYS.fdflags(null, null)
    WrongDataType

negative:
    $SYS.fdflags(0)
    ArgumentMissed

negative:
    $SYS.fdflags(0, null)
    WrongDataType

negative:
    $SYS.fdflags(0, 'foo')
    InvalidValue

negative:
    $SYS.fdflags(! )
    ArgumentMissed

negative:
    $SYS.fdflags(! null, null )
    WrongDataType

negative:
    $SYS.fdflags(! 0 )
    ArgumentMissed

negative:
    $SYS.fdflags(! 0, null )
    WrongDataType

negative:
    $SYS.fdflags(! 0, 'foo' )
    InvalidValue

positive:
    $RUNNER.user(! "myPipe", $SYS.pipe() )
    true

positive:
    $DATA.type($RUNNER.myObj.myPipe)
    'tuple'

positive:
    $DATA.type($RUNNER.myObj.myPipe[0])
    'longint'

negative:
    $SYS.fdflags($RUNNER.myObj.myPipe[0])
    ArgumentMissed

negative:
    $SYS.fdflags($RUNNER.myObj.myPipe[0], null)
    WrongDataType

negative:
    $SYS.fdflags($RUNNER.myObj.myPipe[0], '')
    InvalidValue

positive:
    $SYS.fdflags($RUNNER.myObj.myPipe[0], 'cloexec')
    true

positive:
    $SYS.fdflags($RUNNER.myObj.myPipe[1], 'cloexec')
    true

negative:
    $SYS.fdflags(! $RUNNER.myObj.myPipe[0] )
    ArgumentMissed

negative:
    $SYS.fdflags(! $RUNNER.myObj.myPipe[0], null )
    WrongDataType

negative:
    $SYS.fdflags(! $RUNNER.myObj.myPipe[0], '' )
    InvalidValue

negative:
    $SYS.fdflags(! $RUNNER.myObj.myPipe[0], 'foo' )
    InvalidValue

positive:
    $SYS.fdflags(! $RUNNER.myObj.myPipe[0], 'nonblock' )
    true

positive:
    $SYS.fdflags($RUNNER.myObj.myPipe[0], 'nonblock')
    true

positive:
    $SYS.close($RUNNER.myObj.myPipe[0])
    true

negative:
    $SYS.fdflags($RUNNER.myObj.myPipe[0], 'nonblock')
    InvalidValue

positive:
    $RUNNER.user(! "myPipe", undefined )
    true

negative:
    $SYS.sockopt()
    ArgumentMissed

negative:
    $SYS.sockopt(null, null)
    WrongDataType

negative:
    $SYS.sockopt('', '')
    WrongDataType

negative:
    $SYS.sockopt(0, 'foo')
    InvalidValue

negative:
    $SYS.sockopt(0, 'type')
    OSFailure

negative:
    $SYS.sockopt(0, 'recv-timeout')
    OSFailure

negative:
    $SYS.sockopt(0, 'send-timeout')
    OSFailure

negative:
    $SYS.sockopt(0, 'recv-buffer')
    OSFailure

negative:
    $SYS.sockopt(0, 'send-buffer')
    OSFailure

negative:
    $SYS.sockopt(0, 'send-buffer')
    OSFailure

positive:
    $RUNNER.user(! "inetStreamSocket", $SOCKET.stream('inet4://localhost:8080') )
    true

positive:
    $SYS.sockopt($RUNNER.myObj.inetStreamSocket.fd, 'type')
    'stream'

positive:
    $SYS.sockopt(! $RUNNER.myObj.inetStreamSocket.fd, 'keep-alive', true)
    true

positive:
    $SYS.sockopt($RUNNER.myObj.inetStreamSocket.fd, 'keep-alive')
    true

positive:
    $SYS.sockopt(! $RUNNER.myObj.inetStreamSocket.fd, 'recv-timeout', 3)
    true

positive:
    $SYS.sockopt($RUNNER.myObj.inetStreamSocket.fd, 'recv-timeout')
    3.0

positive:
    $SYS.sockopt(! $RUNNER.myObj.inetStreamSocket.fd, 'send-timeout', 3)
    true

positive:
    $SYS.sockopt($RUNNER.myObj.inetStreamSocket.fd, 'send-timeout')
    3.0

positive:
    $SYS.sockopt(! $RUNNER.myObj.inetStreamSocket.fd, 'recv-buffer', 1024 )
    true

positive:
    $L.ge($SYS.sockopt($RUNNER.myObj.inetStreamSocket.fd, 'recv-buffer'), 1024)
    true

positive:
    $SYS.sockopt(! $RUNNER.myObj.inetStreamSocket.fd, 'send-buffer', 1024)
    true

positive:
    $L.ge($SYS.sockopt($RUNNER.myObj.inetStreamSocket.fd, 'send-buffer'), 1024)
    true

positive:
    $RUNNER.user(! 'inetStreamSocket', undefined )
    true

positive:
    $RUNNER.user(! "inetDgramSocket", $SOCKET.dgram('inet4://localhost:8080') )
    true

positive:
    $SYS.sockopt($RUNNER.myObj.inetDgramSocket.fd, 'type')
    'dgram'

positive:
    $RUNNER.user(! 'inetDgramSocket', undefined )
    true

negative:
    $SYS.remove()
    ArgumentMissed

negative:
    $SYS.remove(null)
    WrongDataType

positive:
    $SYS.remove("/root")
    false

positive:
    $SYS.remove("/tmp/file-not-exists")
    false

negative:
    $SYS.access
    ArgumentMissed

negative:
    $SYS.access(null)
    WrongDataType

positive:
    $SYS.access('/tmp/file-not-exists')
    false

positive:
    $SYS.access('/bin/ls', 'read execute existence')
    true

positive:
    $SYS.access('/root', 'read execute')
    false

negative:
    $SYS.spawn
    ArgumentMissed

negative:
    $SYS.spawn(null, null)
    ArgumentMissed

negative:
    $SYS.spawn(null, null, null)
    WrongDataType

negative:
    $SYS.spawn('file-not-exists', [ { 'action': 'close', 'fd': 0 }, { 'action': 'open', 'fd': 1, 'path': '/tmp/stdout-ls', 'oflags': 'read'} ],  ['ls', '/'], null)
    WrongDataType

negative:
    $SYS.spawn('ls', [ { 'action': 'close', 'fd': 0 }, { 'action': 'open', 'fd': 1, 'path': '/tmp/stdout-ls', 'oflags': 'read'}, null ],  ['ls', '/'], ['A=B'])
    WrongDataType

negative:
    $SYS.spawn('ls', [ { 'action': 'close', 'fd': 0 }, { 'action': 'open', 'fd': 1, 'path': '/tmp/stdout-ls', 'oflags': 'read'} ],  ['ls', '/'], ['A=B', null])
    WrongDataType

negative:
    $SYS.spawn('ls', [ { 'action': 'close', 'foo': 0 }, { 'action': 'open', 'fd': 1, 'path': '/tmp/stdout-ls', 'oflags': 'read'} ],  ['ls', '/'], ['A=B'])
    InvalidValue

negative:
    $SYS.spawn('ls', [ { 'action': 'close', 'fd': 0 }, { 'action': 'open', 'fd': 1, 'path': '/tmp/stdout-ls', 'oflags': 'foo'} ],  ['ls', '/'], ['A=B'])
    InvalidValue

positive:
    {{ $SYS.spawn('ls', [ { 'action': 'close', 'fd': 0 }, { 'action': 'open', 'fd': 1, 'path': '/tmp/stdout-ls', 'oflags': 'write create truncate'} ],  ['ls', '/'], [], 'setsid') && $SYS.access('/tmp/stdout-ls') }}
    true

positive:
    $DATA.type($SYS.spawn('bc', [{ 'action': 'open', 'fd': 0, 'path': '/tmp/stdout-ls', 'oflags': 'read' }, { 'action': 'open', 'fd': 1, 'path': '/tmp/stdout-bc', 'oflags': 'write create truncate'}, { 'action': 'open', 'fd': 2, 'path': '/tmp/stderr-bc', 'oflags': 'write create truncate'} ],  ['bc'], [], 'setsid'))
    'longint'

negative:
    $SYS.open()
    ArgumentMissed

negative:
    $SYS.open(null)
    WrongDataType

negative:
    $SYS.open('', null)
    InvalidValue

negative:
    $SYS.open('/file-not-exist', 'read', null)
    WrongDataType

negative:
    $SYS.open('/file-not-exist', 'read write create')
    AccessDenied

positive:
    $DATA.type($SYS.open('/tmp/new-empty-file', 'read write create truncate', '0666'))
    'longint'

positive:
    $SYS.remove('/tmp/new-empty-file')
    true

negative:
    $SYS.sendfile
    ArgumentMissed

negative:
    $SYS.sendfile(null)
    ArgumentMissed

negative:
    $SYS.sendfile(null, null)
    WrongDataType

positive:
{{ $L.streq('case', $SYS.uname_prt, 'Darwin') || $L.gt($SYS.sendfile($SYS.open('/tmp/copy-of-stdout-ls', 'read write create truncate', '0666'), $SYS.open('/tmp/stdout-ls', 'read')), 0) }}
    true

