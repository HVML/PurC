# test cases for $JS
negative:
    $JS.runtime
    ArgumentMissed

negative:
    $JS.runtime(null)
    WrongDataType

negative:
    $JS.runtime('foo')
    InvalidValue

positive:
    $JS.runtime('memory-limit')
    18446744073709551615UL

negative:
    $JS.runtime!()
    ArgumentMissed

negative:
    $JS.runtime!('foo')
    ArgumentMissed

negative:
    $JS.runtime!(null, null)
    WrongDataType

negative:
    $JS.runtime!('foo', 2)
    InvalidValue

positive:
    $JS.load('std')
    true

positive:
    $JS.eval('1+2')
    3

negative:
    $JS.eval('{a: 1}', 'foo')
    InvalidValue

positive:
    $DATA.parse($JS.eval('[]'))
    []

positive:
    $DATA.parse($JS.eval('[null, false, "true"]'))
    [null, false, "true"]

positive:
    $JS.eval('[null, false, "true"]', 'string')
    ',false,true'

positive:
    $JS.eval('{a: 1}', 'json')
    1

positive:
    $DATA.parse($JS.eval('const ages1 = { alice: 18, bob: 27 }; ages1', 'json'))
    { alice: 18, bob: 27 }

positive:
    $JS.eval('const ages2 = { alice: 18, bob: 27 }; ages2', 'string')
    '[object Object]'

# TODO: bigint
positive:
    $JS.eval('BigInt(9007199254740991)')
    9007199254740991N

positive:
    $JS.eval('BigInt(0)')
    0N

positive:
    $JS.eval('BigInt(123)')
    123N

positive:
    $JS.eval('BigInt(-456)')
    -456N

positive:
    $JS.eval('BigInt("789")')
    789N

positive:
    $JS.eval('BigInt("-987")')
    -987N

positive:
    $JS.eval('BigInt(100) + BigInt(200)')
    300N

positive:
    $JS.eval('BigInt(500) - BigInt(300)')
    200N

positive:
    $JS.eval('BigInt(12) * BigInt(34)')
    408N

positive:
    $JS.eval('BigInt(100) / BigInt(10)')
    10N

positive:
    $JS.eval('BigInt("123456789012345678901234567890")')
    123456789012345678901234567890N

positive:
    $JS.eval('BigInt("0xff")')
    255N

positive:
    $JS.eval('BigInt("0xFF")')
    255N

positive:
    $JS.eval('BigInt("0x1a2b3c")')
    1715004N

positive:
    $JS.eval('BigInt("0xABCDEF")')
    11259375N

positive:
    $JS.eval('BigInt("0x123456789abcdef")')
    81985529216486895N

positive:
    $JS.eval('BigInt("0xffffffffffffffffff")')
    4722366482869645213695N

positive:
    {{ $JS.eval('foo + 2'); $STR.explode($JS.lastError(), '\n')[0] }}
    "ReferenceError: 'foo' is not defined"

positive:
    $JS.runtime!('memory-limit', 1024)
    true

positive:
    $JS.runtime('memory-limit')
    1024UL

positive:
    $JS.runtime!('max-stack-size', 1024)
    true

positive:
    $JS.runtime('max-stack-size')
    1024UL

positive:
    $JS.runtime!('gc-threshold', 1024)
    true

positive:
    $JS.runtime('gc-threshold')
    1024UL

positive:
    $JS.runtime!('dump-unhandled-rejection', false)
    true

positive:
    $JS.runtime('dump-unhandled-rejection')
    false

positive:
    $JS.runtime!('strip-debug', false)
    true

positive:
    $JS.runtime('strip-debug')
    false

positive:
    $JS.runtime!('strip-source', false)
    true

positive:
    $JS.runtime('strip-source')
    false

