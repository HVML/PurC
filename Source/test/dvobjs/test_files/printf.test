# test case sample
#
# test_begin_index
# param_begin
# your parameters
# param_end
# your result
# test_end

# variant in test case:
# undefined:;
# null:;
# boolean:true;
# number:3.1415926;
# longint:3;
# ulongint:5;
# longdouble:3.1415926;
# string:"hello world"
# atromstring:"hello world"
# bsequence:"hello world"
# dynamic:;
# native:;
# object:2:"key1";boolean:true;"key2";boolean:false;
# array:2:boolean:true;boolean:false;
# set:2:object:2:"key1";boolean:true;"key2";boolean:false;object:2:"key1";boolean:false;"key2";boolean:true;
# invalid:;

# Notation:
# 1. NO white space is permitted in a line;
# 2. NO BLANK LINE is permitted in a test case;
# 3. One variant must end with ';';
# 4. The contents in dynamic and native type, are all pointers. So the code constructs pointers, do not input anything.

test_begin
param_begin
param_end
invalid:;
test_end

test_begin
param_begin
null:;
param_end
invalid:;
test_end

test_begin
param_begin
undefined:;
boolean:false;
param_end
invalid:;
test_end

test_begin
param_begin
string:"hello world %s";
string:"beijing";
param_end
string:"hello world beijing";
test_end

test_begin
param_begin
string:"hello world %s %s %s";
string:"beijing";
string:"shanghai";
string:"guangzhou";
param_end
string:"hello world beijing shanghai guangzhou";
test_end

test_begin
param_begin
string:"hello world %s %s %s %f";
string:"beijing";
string:"shanghai";
string:"guangzhou";
number:1.1;
param_end
string:"hello world beijing shanghai guangzhou 1.100000";
test_end

test_begin
param_begin
string:"hello world %s %% %s %s %f";
string:"beijing";
string:"shanghai";
string:"guangzhou";
number:1.1;
param_end
string:"hello world beijing % shanghai guangzhou 1.100000";
test_end

test_begin
param_begin
string:"hello world %s %%%s %s %f";
string:"beijing";
string:"shanghai";
string:"guangzhou";
number:1.1;
param_end
string:"hello world beijing %shanghai guangzhou 1.100000";
test_end

test_begin
param_begin
string:"hello world %d";
number:1;
param_end
string:"hello world 1";
test_end

test_begin
param_begin
string:"hello world %f %d";
number:1.1;
number:1;
param_end
string:"hello world 1.100000 1";
test_end

test_begin
param_begin
string:"hello world %s %s %s %f %d";
string:"beijing";
string:"shanghai";
string:"guangzhou";
number:1.1;
number:1;
param_end
string:"hello world beijing shanghai guangzhou 1.100000 1";
test_end

test_begin
param_begin
string:"hello world %s %s %s %f %d";
string:"beijing";
string:"shanghai";
string:"guangzhou";
number:1.1;
string:"hello";
param_end
string:"hello world beijing shanghai guangzhou 1.100000 0";
test_end

test_begin
param_begin
string:"hello world %s %s %s %f %d %o";
string:"beijing";
string:"shanghai";
string:"guangzhou";
number:1.1;
string:"hello";
number:16;
param_end
string:"hello world beijing shanghai guangzhou 1.100000 0 20";
test_end

test_begin
param_begin
string:"hello world %s %s %s %f %d %o %x";
string:"beijing";
string:"shanghai";
string:"guangzhou";
number:1.1;
string:"hello";
number:16;
number:16;
param_end
string:"hello world beijing shanghai guangzhou 1.100000 0 20 10";
test_end

test_begin
param_begin
string:"hello world %s %s %s %f %d shenzhen";
string:"beijing";
string:"shanghai";
string:"guangzhou";
number:1.1;
number:1;
param_end
string:"hello world beijing shanghai guangzhou 1.100000 1 shenzhen";
test_end

