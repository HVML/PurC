# test cases for $STREAM.open
negative:
    $STREAM.open('file:///tmp/test_stream_not_exist')
    EntityNotFound

negative:
    $STREAM.open('file:///tmp/test_stream_not_exist', 'read write')
    EntityNotFound

positive:
    $DATA.type($STREAM.open('file:///tmp/test_stream_not_exist', 'create'))
    'native'

positive:
    $SYS.remove('/tmp/test_stream_not_exist')
    true

positive:
    $DATA.type($STREAM.open('file:///tmp/test_stream_create', 'read write create truncate'))
    'native'

positive:
    $SYS.remove('/tmp/test_stream_create')
    true

# $STREAM.readbytes/writebytes
positive:
    $STREAM.open('file:///tmp/test_stream_bytes', 'read write create truncate').writebytes(bx48564d4c3A202d5f2e)
    9L

positive:
    $STREAM.open('file:///tmp/test_stream_bytes', 'read write create truncate').writebytes('write string')
    12L

positive:
    $STREAM.open('file:///tmp/test_stream_bytes', 'read').readbytes(10)
    bx77726974652073747269

positive:
    $STREAM.open('file:///tmp/test_stream_bytes', 'read').readbytes(100)
    bx777269746520737472696e67

positive:
    $SYS.remove('/tmp/test_stream_bytes')
    true

# $STREAM.writelines/readlines
positive:
    $STREAM.open('file:///tmp/test_stream_lines', 'read write create truncate').writelines("This is the string to write")
    28L

positive:
    $STREAM.open('file:///tmp/test_stream_lines', 'read write create truncate').writelines(["This is the string to write", "Second line"])
    40L

positive:
    $STREAM.open('file:///tmp/test_stream_lines', 'read').readlines(0)
    ["This is the string to write", "Second line"]

positive:
    $STREAM.open('file:///tmp/test_stream_lines', 'read').readlines(1)
    ["This is the string to write"]

positive:
    $STREAM.open('file:///tmp/test_stream_lines', 'read').readlines(20)
    ["This is the string to write", "Second line"]

positive:
    $SYS.remove('/tmp/test_stream_lines')
    true

# $STREAM.writestruct/readstruct
positive:
    $STREAM.open('file:///tmp/test_stream_struct', 'read write create truncate').writestruct("i16le i32le", 10, 10)
    6L

positive:
    $STREAM.open('file:///tmp/test_stream_struct', 'read').readstruct("i16le i32le")
    [10L, 10L]

positive:
    $STREAM.open('file:///tmp/test_stream_struct', 'read write create truncate').writestruct("i16le:2 i32le", [10, 15], 255)
    8L

positive:
    $STREAM.open('file:///tmp/test_stream_struct', 'read').readstruct("i16le:2 i32le")
    [[10L, 15L], 255L]

positive:
    $STREAM.open('file:///tmp/test_stream_struct', 'read write create truncate').writestruct("i16le:2 i32le", [[10, 15], 255])
    8L

positive:
    $STREAM.open('file:///tmp/test_stream_struct', 'read').readstruct("i16le:2 i32le")
    [[10L, 15L], 255L]

negative:
    $STREAM.open('file:///tmp/test_stream_struct', 'read').readstruct("i16le:2 i32le:10")
    InvalidValue
    [[10L, 15L]]

positive:
    $SYS.remove('/tmp/test_stream_struct')
    true

# $STREAM.seek
positive:
    $STREAM.open('file:///tmp/test_stream_seek', 'read write create truncate').writelines("This is the string to write")
    28L

positive:
    $STREAM.open('file:///tmp/test_stream_seek', 'read write').seek(10, 'set')
    10L

positive:
    $STREAM.open('file:///tmp/test_stream_seek', 'read write').seek(3, 'current')
    3L

positive:
    $STREAM.open('file:///tmp/test_stream_seek', 'read write').seek(-3, 'current')
    false

positive:
    $STREAM.open('file:///tmp/test_stream_seek', 'read write').seek(-3, 'end')
    25L

positive:
    $STREAM.open('file:///tmp/test_stream_seek', 'read write').seek(10)
    10L

positive:
    $STREAM.open('file:///tmp/test_stream_seek', 'read write').seek(-10)
    false

negative:
    $STREAM.open('file:///tmp/test_stream_seek', 'read write').seek(10, 'not support')
    InvalidValue

negative:
    $STREAM.open('file:///tmp/test_stream_seek', 'read write').seek(10, '')
    InvalidValue

positive:
    $SYS.remove('/tmp/test_stream_seek')
    true

# $STREAM read string
positive:
    $STREAM.open('file:///tmp/test_stream_readstring', 'read write create truncate').writestruct('utf8:40', "This is the string to write, Second line")
    40L

positive:
    $STREAM.open('file:///tmp/test_stream_readstring', 'read').readstruct('utf8')
    "This is the string to write, Second line"

positive:
    $STREAM.open('file:///tmp/test_stream_readstring', 'read write create truncate').writestruct('utf8:40 i16le', "This is the string to write, Second line", 10)
    42L

positive:
    $STREAM.open('file:///tmp/test_stream_readstring', 'read write create truncate').writestruct('utf8 i16le', "This is the string to write, Second line", 10)
    43L

positive:
    $STREAM.open('file:///tmp/test_stream_readstring', 'read').readstruct('utf8')
    "This is the string to write, Second line"

positive:
    $STREAM.open('file:///tmp/test_stream_readstring', 'read write create truncate').writestruct('utf16:84 i16le', "This is the string to write, Second line", 99)
    84L

positive:
    $STREAM.open('file:///tmp/test_stream_readstring', 'read').readstruct('utf16')
    "This is the string to write, Second line"

positive:
    $STREAM.open('file:///tmp/test_stream_readstring', 'read write create truncate').writestruct('utf32:165 i16le', "This is the string to write, Second line", 99)
    166L

positive:
    $STREAM.open('file:///tmp/test_stream_readstring', 'read').readstruct('utf32 i16le')
    ["This is the string to write, Second line", 99L]

positive:
    $STREAM.close($STREAM.open('file:///tmp/test_stream_readstring', 'read write create truncate'))
    true

positive:
    $SYS.remove('/tmp/test_stream_readstring')
    true

positive:
    $STREAM.stdout.writelines('##### write to stdout #####')
    28L

positive:
    $STREAM.stderr.writelines('##### write to stderr #####')
    28L

# input 'aaa' by keyboard
#positive:
#    $STREAM.readlines($STREAM.stdin, 1)
#    ["aaa"]


#  CJSONEE
positive:
    {{ $STREAM.stderr.writelines('first line') && $STREAM.stderr.writelines('second line') }}
    12L

positive:
    {{ $STREAM.stderr.writelines('first line') || $STREAM.stderr.writelines('second line') }}
    11L

positive:
    {{ $STREAM.stderr.writelines('first line') && {{ $STREAM.stderr.writelines('second line') || $STREAM.stderr.writelines('third line') }} }}
    12L

positive:
    {{ $STREAM.stderr.writelines('first line') && {{ $STREAM.stderr.writelines('second line') && $STREAM.stderr.writelines('third line') }} }}
    11L

positive:
    {{ $STREAM.stderr.writelines('first line'); $STREAM.stderr.writelines('second line') ; $STREAM.stderr.writelines('third line') }}
    11L

positive:
    {{ $STREAM.stderr.writelines('first line'); $STREAM.stderr.writelines('second line') && $STREAM.stderr.writelines('third line') }}
    11L

positive:
    {{ $STREAM.stderr.writelines('first line'); $STREAM.stderr.writelines('second line') || $STREAM.stderr.writelines('third line') }}
    12L

positive:
    {{ {{ $STREAM.stderr.writelines('first line') && $STREAM.stderr.writelines('second line') }} || $STREAM.stderr.writelines('third line') }}
    12L

positive:
    {{ {{ $STREAM.stderr.writelines('first line') && $STREAM.stderr.writelines('second line') }} && $STREAM.stderr.writelines('third line') }}
    11L

positive:
    {{ {{ $STREAM.stderr.writelines('first line') && $STREAM.stderr.writelines('second line') }} && "End Infos" }}
    "End Infos"

positive:
    {{ {{ $STREAM.stderr.writelines('first line') && $STREAM.stderr.writelines('second line') }} ; "End Infos" }}
    "End Infos"

positive:
    {{ {{ $STREAM.stderr.writelines('first line') || $STREAM.stderr.writelines('second line') }} || "End Infos" }}
    11L

negative:
    $STREAM.open()
    ArgumentMissed

negative:
    $STREAM.open(null)
    WrongDataType

negative:
    $STREAM.open('foo')
    InvalidValue

negative:
    $STREAM.open('foo:///var/tmp/a')
    InvalidValue

# test cases for $STREAM.putuc
negative:
    $STREAM.stdout.putuc()
    ArgumentMissed

negative:
    $STREAM.stdout.putuc(null)
    WrongDataType

negative:
    $STREAM.stdout.putuc('', null)
    WrongDataType

negative:
    $STREAM.stdout.putuc('', 'foo')
    InvalidValue

negative:
    $STREAM.open('file:///tmp/test_stream_putuc', 'read write create truncate').putuc('中', 'invalid')
    InvalidValue

positive:
    $STREAM.open('file:///tmp/test_stream_putuc', 'read write create truncate').putuc('A')
    1UL

positive:
    $STREAM.open('file:///tmp/test_stream_putuc', 'read write create truncate').putuc('中')
    3UL

positive:
    $STREAM.open('file:///tmp/test_stream_putuc', 'read write create truncate').putuc('中', 'utf8')
    3UL

positive:
    $STREAM.open('file:///tmp/test_stream_putuc', 'read write create truncate').putuc('中', 'utf16le')
    2UL

positive:
    $STREAM.open('file:///tmp/test_stream_putuc', 'read write create truncate').putuc('中', 'utf16be')
    2UL

positive:
    $STREAM.open('file:///tmp/test_stream_putuc', 'read write create truncate').putuc('中', 'utf32le')
    4UL

positive:
    $STREAM.open('file:///tmp/test_stream_putuc', 'read write create truncate').putuc('中', 'utf32be')
    4UL

positive:
    $STREAM.open('file:///tmp/test_stream_putuc', 'read write create truncate').putuc(0x4E2D)
    3UL

positive:
    $SYS.remove('/tmp/test_stream_putuc')
    true

# test cases for $STREAM.getuc
negative:
    $STREAM.stdout.getuc(null)
    WrongDataType

negative:
    $STREAM.stdout.getuc('', null)
    WrongDataType

negative:
    $STREAM.stdout.getuc('', 'foo')
    InvalidValue

negative:
    $STREAM.open('file:///tmp/test_stream_getuc', 'read write create truncate').getuc('invalid')
    InvalidValue

# Test reading UTF-8 encoded characters
positive:
    $STREAM.open('file:///tmp/test_stream_getuc', 'read write create truncate').putuc('A')
    1UL

positive:
    $STREAM.open('file:///tmp/test_stream_getuc', 'read').getuc()
    'A'

positive:
    $STREAM.open('file:///tmp/test_stream_getuc', 'read').getuc('utf8', 'codepoint')
    65UL

positive:
    $STREAM.open('file:///tmp/test_stream_getuc', 'read write create truncate').putuc('中')
    3UL

positive:
    $STREAM.open('file:///tmp/test_stream_getuc', 'read').getuc('utf8')
    '中'

positive:
    $STREAM.open('file:///tmp/test_stream_getuc', 'read').getuc('utf8', 'codepoint')
    20013UL

# Test reading UTF-16LE encoded characters
positive:
    $STREAM.open('file:///tmp/test_stream_getuc', 'read write create truncate').putuc('中', 'utf16le')
    2UL

positive:
    $STREAM.open('file:///tmp/test_stream_getuc', 'read').getuc('utf16le')
    '中'

positive:
    $STREAM.open('file:///tmp/test_stream_getuc', 'read').getuc('utf16le', 'codepoint')
    20013UL

# Test reading UTF-16BE encoded characters
positive:
    $STREAM.open('file:///tmp/test_stream_getuc', 'read write create truncate').putuc('中', 'utf16be')
    2UL

positive:
    $STREAM.open('file:///tmp/test_stream_getuc', 'read').getuc('utf16be')
    '中'

positive:
    $STREAM.open('file:///tmp/test_stream_getuc', 'read').getuc('utf16be', 'codepoint')
    20013UL

# Test reading UTF-16LE encoded characters which uses surrogate pair
positive:
    $STREAM.open('file:///tmp/test_stream_getuc', 'read write create truncate').putuc(127775UL, 'utf16le')
    4UL

positive:
    $STREAM.open('file:///tmp/test_stream_getuc', 'read').getuc('utf16le', 'codepoint')
    127775UL

# Test reading UTF-16LE encoded characters which uses surrogate pair
positive:
    $STREAM.open('file:///tmp/test_stream_getuc', 'read write create truncate').putuc(127775UL, 'utf16be')
    4UL

positive:
    $STREAM.open('file:///tmp/test_stream_getuc', 'read').getuc('utf16be', 'codepoint')
    127775UL

# Test reading UTF-32LE encoded characters
positive:
    $STREAM.open('file:///tmp/test_stream_getuc', 'read write create truncate').putuc('中', 'utf32le')
    4UL

positive:
    $STREAM.open('file:///tmp/test_stream_getuc', 'read').getuc('utf32le')
    '中'

positive:
    $STREAM.open('file:///tmp/test_stream_getuc', 'read').getuc('utf32le', 'codepoint')
    20013UL

# Test reading UTF-32BE encoded characters
positive:
    $STREAM.open('file:///tmp/test_stream_getuc', 'read write create truncate').putuc('中', 'utf32be')
    4UL

positive:
    $STREAM.open('file:///tmp/test_stream_getuc', 'read').getuc('utf32be')
    '中'

positive:
    $STREAM.open('file:///tmp/test_stream_getuc', 'read').getuc('utf32be', 'codepoint')
    20013UL

# Test reading at end of file
negative:
    $STREAM.open('file:///tmp/test_stream_getuc', 'read write create truncate')
    OK

negative:
    $STREAM.open('file:///tmp/test_stream_getuc', 'read').getuc()
    NoData

positive:
    $RUNNER.user(! "myStream", $STREAM.open('file:///tmp/test_stream_getuc', 'read write create truncate') )
    true

negative:
    $STREAM.stdin.ungetuc
    ArgumentMissed

negative:
    $STREAM.stdin.ungetuc(null)
    WrongDataType

negative:
    $STREAM.stdin.ungetuc('', null)
    WrongDataType

negative:
    $STREAM.stdin.ungetuc('', 'foo')
    InvalidValue

negative:
    $STREAM.stdin.ungetuc(0x200000L)
    InvalidValue

positive:
    $RUNNER.myObj.myStream.putuc('ABC')
    1UL

positive:
    $RUNNER.myObj.myStream.ungetuc('D')
    1UL

positive:
    $RUNNER.myObj.myStream.ungetuc('中')
    3UL

positive:
    $RUNNER.myObj.myStream.getuc()
    '中'

positive:
    $RUNNER.myObj.myStream.getuc()
    'D'

positive:
    $SYS.remove('/tmp/test_stream_getuc')
    true

positive:
    $STREAM.from('HVML').getuc()
    'H'

positive:
    $RUNNER.user(! "myStream", $STREAM.from('HVML'))
    true

positive:
    $RUNNER.myObj.myStream.getuc()
    'H'

negative:
    $RUNNER.myObj.myStream.putuc('中')
    NotDesiredEntity

positive:
    $RUNNER.myObj.myStream.ungetuc('中')
    3UL

positive:
    $RUNNER.myObj.myStream.getuc()
    '中'

positive:
    $RUNNER.myObj.myStream.getuc()
    'V'

negative:
    $STREAM.from_buffer()
    ArgumentMissed

negative:
    $STREAM.from_buffer(null)
    WrongDataType

negative:
    $STREAM.from_buffer(1, null)
    WrongDataType

positive:
    $STREAM.from_buffer(16, 0).putuc('A')
    1UL

positive:
    $RUNNER.user(! "myStream", $STREAM.from_buffer(16, 32))
    true

positive:
    $RUNNER.myObj.myStream.putuc('H')
    1UL

positive:
    $RUNNER.myObj.myStream.putuc('中')
    3UL

positive:
    $RUNNER.myObj.myStream.ungetuc('V')
    1UL

positive:
    $RUNNER.myObj.myStream.seek(0, 'set')
    0L

positive:
    $RUNNER.myObj.myStream.getuc()
    'H'

positive:
    $RUNNER.myObj.myStream.getuc()
    '中'

