PCHVML_TOKEN_START_TAG|<hvml target="void">
PCHVML_TOKEN_VCM_TREE|"
    "
PCHVML_TOKEN_START_TAG|<head>
PCHVML_TOKEN_VCM_TREE|"
    "
PCHVML_TOKEN_END_TAG|</head>
PCHVML_TOKEN_VCM_TREE|"

    "
PCHVML_TOKEN_START_TAG|<body id="server">
PCHVML_TOKEN_VCM_TREE|"

        "
PCHVML_TOKEN_START_TAG|<init as="sslSettings">
PCHVML_TOKEN_VCM_TREE|"
            "
PCHVML_TOKEN_VCM_TREE|make_object("ssl-key", "../Source/test/dvobjs/localhost.key", "ssl-cert", "../Source/test/dvobjs/localhost.crt")
PCHVML_TOKEN_END_TAG|</init>
PCHVML_TOKEN_VCM_TREE|"

        "
PCHVML_TOKEN_START_TAG|<init as="clients" with=make_object()/>
PCHVML_TOKEN_VCM_TREE|"

        "
PCHVML_TOKEN_START_TAG|<init as="srvListenSocket" with=callGetter(getMember(getVariable("SOCKET"), "stream"), "inet://localhost:8080", "none", 32, {{ getMember(getVariable("REQ"), "secure") && getVariable("sslSettings") || make_object() }})>
PCHVML_TOKEN_VCM_TREE|"
            "
PCHVML_TOKEN_START_TAG|<catch for=`ANY`>
PCHVML_TOKEN_VCM_TREE|"
                "
PCHVML_TOKEN_START_TAG|<exit with=concatString("Server failed with ", getMember(getVariable("?"), "name"), " when calling SOCKET.stream()")/>
PCHVML_TOKEN_VCM_TREE|"
            "
PCHVML_TOKEN_END_TAG|</catch>
PCHVML_TOKEN_VCM_TREE|"
        "
PCHVML_TOKEN_END_TAG|</init>
PCHVML_TOKEN_VCM_TREE|"

        "
PCHVML_TOKEN_START_TAG|<load from=concatString("#", getMember(getVariable("REQ"), "client")) within="client" onto="null:" as="client" async>
PCHVML_TOKEN_VCM_TREE|"
            "
PCHVML_TOKEN_START_TAG|<catch for=`ANY`>
PCHVML_TOKEN_VCM_TREE|"
                "
PCHVML_TOKEN_START_TAG|<exit with=concatString("Server failed with ", getMember(getVariable("?"), "name"), " when loading client")/>
PCHVML_TOKEN_VCM_TREE|"
            "
PCHVML_TOKEN_END_TAG|</catch>
PCHVML_TOKEN_VCM_TREE|"
        "
PCHVML_TOKEN_END_TAG|</load>
PCHVML_TOKEN_VCM_TREE|"

        "
PCHVML_TOKEN_START_TAG|<iterate with=callGetter(getMember(getVariable("srvListenSocket"), "accept"), "default", "websocket")>
PCHVML_TOKEN_VCM_TREE|"
            "
PCHVML_TOKEN_START_TAG|<test with=callGetter(getMember(getVariable("L"), "not"), callGetter(getMember(getVariable("DATA"), "isequal"), getVariable("?"), null))>
PCHVML_TOKEN_VCM_TREE|"

                "
PCHVML_TOKEN_START_TAG|<init as="clientId" with=concatString(getMember(getVariable("?"), "peerAddr"), ":", getMember(getVariable("?"), "peerPort")) temp/>
PCHVML_TOKEN_VCM_TREE|"

                "
PCHVML_TOKEN_START_TAG|<inherit>
PCHVML_TOKEN_VCM_TREE|"
                    "
PCHVML_TOKEN_VCM_TREE|callGetter(getMember(getMember(getVariable("STREAM"), "stdout"), "writelines"), concatString("Accepted a connection: ", getVariable("clientId")))
PCHVML_TOKEN_END_TAG|</inherit>
PCHVML_TOKEN_VCM_TREE|"

                "
PCHVML_TOKEN_START_TAG|<update on=getVariable("clients") to="merge" with=make_object(getVariable("clientId"), getVariable("?"))/>
PCHVML_TOKEN_VCM_TREE|"

                "
PCHVML_TOKEN_START_TAG|<observe on=getMember(getVariable("clients"), getVariable("clientId")) for="handshake">
PCHVML_TOKEN_VCM_TREE|"
                    "
PCHVML_TOKEN_VCM_TREE|getVariable("clientId")
PCHVML_TOKEN_START_TAG|<inherit>
PCHVML_TOKEN_VCM_TREE|"
                    "
PCHVML_TOKEN_VCM_TREE|{{ callGetter(getMember(getMember(getVariable("STREAM"), "stdout"), "writelines"), concatString("Got handshake event from ", getVariable("_observedContent"))) ; callGetter(getMember(getMember(getVariable("STREAM"), "stdout"), "writelines"), callGetter(getMember(getVariable("DATA"), "serialize"), getVariable("?"))) ;  }}
PCHVML_TOKEN_END_TAG|</inherit>
PCHVML_TOKEN_VCM_TREE|"
                "
PCHVML_TOKEN_END_TAG|</observe>
PCHVML_TOKEN_VCM_TREE|"

                "
PCHVML_TOKEN_START_TAG|<observe on=getMember(getVariable("clients"), getVariable("clientId")) for="error">
PCHVML_TOKEN_VCM_TREE|"
                    "
PCHVML_TOKEN_VCM_TREE|getVariable("clientId")
PCHVML_TOKEN_START_TAG|<inherit>
PCHVML_TOKEN_VCM_TREE|"
                    "
PCHVML_TOKEN_VCM_TREE|{{ callGetter(getMember(getMember(getVariable("STREAM"), "stdout"), "writelines"), concatString("Got error event from ", getVariable("_observedContent"))) ; callGetter(getMember(getMember(getVariable("STREAM"), "stdout"), "writelines"), callGetter(getMember(getVariable("DATA"), "serialize"), getVariable("?"))) ;  }}
PCHVML_TOKEN_END_TAG|</inherit>
PCHVML_TOKEN_VCM_TREE|"

                    "
PCHVML_TOKEN_START_TAG|<exit with="Bad Client"/>
PCHVML_TOKEN_VCM_TREE|"
                "
PCHVML_TOKEN_END_TAG|</observe>
PCHVML_TOKEN_VCM_TREE|"

                "
PCHVML_TOKEN_START_TAG|<observe on=getMember(getVariable("clients"), getVariable("clientId")) for="close">
PCHVML_TOKEN_VCM_TREE|"
                    "
PCHVML_TOKEN_VCM_TREE|getVariable("clientId")
PCHVML_TOKEN_START_TAG|<inherit>
PCHVML_TOKEN_VCM_TREE|"
                    "
PCHVML_TOKEN_VCM_TREE|{{ callGetter(getMember(getMember(getVariable("STREAM"), "stdout"), "writelines"), concatString("Got error event from ", getVariable("_observedContent"))) ; callGetter(getMember(getMember(getVariable("STREAM"), "stdout"), "writelines"), callGetter(getMember(getVariable("DATA"), "serialize"), getVariable("?"))) }}
PCHVML_TOKEN_END_TAG|</inherit>
PCHVML_TOKEN_VCM_TREE|"

                    "
PCHVML_TOKEN_START_TAG|<exit with="Good Client"/>
PCHVML_TOKEN_VCM_TREE|"
                "
PCHVML_TOKEN_END_TAG|</observe>
PCHVML_TOKEN_VCM_TREE|"
            "
PCHVML_TOKEN_END_TAG|</test>
PCHVML_TOKEN_VCM_TREE|"
        "
PCHVML_TOKEN_END_TAG|</iterate>
PCHVML_TOKEN_VCM_TREE|"

        "
PCHVML_TOKEN_START_TAG|<observe on=getVariable("client") for="corState:exited">
PCHVML_TOKEN_VCM_TREE|"
            "
PCHVML_TOKEN_START_TAG|<inherit>
PCHVML_TOKEN_VCM_TREE|"
                "
PCHVML_TOKEN_VCM_TREE|callGetter(getMember(getMember(getVariable("STREAM"), "stdout"), "writelines"), concatString("Client exited with ", getVariable("?")))
PCHVML_TOKEN_END_TAG|</inherit>
PCHVML_TOKEN_VCM_TREE|"
        "
PCHVML_TOKEN_END_TAG|</observe>
PCHVML_TOKEN_VCM_TREE|"

    "
PCHVML_TOKEN_END_TAG|</body>
PCHVML_TOKEN_VCM_TREE|"

    "
PCHVML_TOKEN_START_TAG|<body id="raw">
PCHVML_TOKEN_VCM_TREE|"

        "
PCHVML_TOKEN_START_TAG|<init as="cliStreamSocket" with=callGetter(getMember(getVariable("STREAM"), "open"), "inet://localhost:8080/", "default")>
PCHVML_TOKEN_VCM_TREE|"
            "
PCHVML_TOKEN_START_TAG|<catch for=`ANY`>
PCHVML_TOKEN_VCM_TREE|"
                "
PCHVML_TOKEN_START_TAG|<exit with=concatString("Client failed with ", getMember(getVariable("?"), "name"), " when calling STREAM.open()")/>
PCHVML_TOKEN_VCM_TREE|"
            "
PCHVML_TOKEN_END_TAG|</catch>
PCHVML_TOKEN_VCM_TREE|"

            "
PCHVML_TOKEN_START_TAG|<inherit>
PCHVML_TOKEN_VCM_TREE|"
                "
PCHVML_TOKEN_VCM_TREE|concatString(callGetter(getMember(getVariable("cliStreamSocket"), "writelines"), "Hello from a raw client socket"), ";

                ")
PCHVML_TOKEN_START_TAG|<catch for=`ANY`>
PCHVML_TOKEN_VCM_TREE|"
                    "
PCHVML_TOKEN_START_TAG|<exit with=concatString("Client failed with ", getMember(getVariable("?"), "name"), " when calling stream.writelines()")/>
PCHVML_TOKEN_VCM_TREE|"
                "
PCHVML_TOKEN_END_TAG|</catch>
PCHVML_TOKEN_VCM_TREE|"
            "
PCHVML_TOKEN_END_TAG|</inherit>
PCHVML_TOKEN_VCM_TREE|"

            "
PCHVML_TOKEN_START_TAG|<choose on=callGetter(getMember(getVariable("cliStreamSocket"), "readlines"), 1)>
PCHVML_TOKEN_VCM_TREE|"

                "
PCHVML_TOKEN_START_TAG|<inherit>
PCHVML_TOKEN_VCM_TREE|"
                    "
PCHVML_TOKEN_VCM_TREE|callGetter(getMember(getMember(getVariable("STREAM"), "stdout"), "writelines"), concatString("Client got ", callGetter(getMember(getVariable("DATA"), "serialize"), getVariable("?")), " and is going to close."))
PCHVML_TOKEN_END_TAG|</inherit>
PCHVML_TOKEN_VCM_TREE|"

                "
PCHVML_TOKEN_START_TAG|<choose on=callGetter(getMember(getVariable("cliStreamSocket"), "close"))>
PCHVML_TOKEN_VCM_TREE|"
                    "
PCHVML_TOKEN_START_TAG|<catch for=`ANY`>
PCHVML_TOKEN_VCM_TREE|"
                        "
PCHVML_TOKEN_START_TAG|<exit with=concatString("Client failed with ", getMember(getVariable("?"), "name"), " when calling stream.close()")/>
PCHVML_TOKEN_VCM_TREE|"
                    "
PCHVML_TOKEN_END_TAG|</catch>
PCHVML_TOKEN_VCM_TREE|"
                "
PCHVML_TOKEN_END_TAG|</choose>
PCHVML_TOKEN_VCM_TREE|"

                "
PCHVML_TOKEN_START_TAG|<exit with="Bye"/>
PCHVML_TOKEN_VCM_TREE|"

                "
PCHVML_TOKEN_START_TAG|<catch for=`ANY`>
PCHVML_TOKEN_VCM_TREE|"
                    "
PCHVML_TOKEN_START_TAG|<return with=concatString("Client failed with ", getMember(getVariable("?"), "name"), " when calling stream.readlines()")/>
PCHVML_TOKEN_VCM_TREE|"
                "
PCHVML_TOKEN_END_TAG|</catch>
PCHVML_TOKEN_VCM_TREE|"
            "
PCHVML_TOKEN_END_TAG|</choose>
PCHVML_TOKEN_VCM_TREE|"

        "
PCHVML_TOKEN_END_TAG|</init>
PCHVML_TOKEN_VCM_TREE|"

    "
PCHVML_TOKEN_END_TAG|</body>
PCHVML_TOKEN_VCM_TREE|"
"
PCHVML_TOKEN_END_TAG|</hvml>
