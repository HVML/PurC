PCHVML_TOKEN_DOCTYPE|<!DOCTYPE hvml>
PCHVML_TOKEN_VCM_TREE|"

"
PCHVML_TOKEN_COMMENT|<!-- $REQ contains the startup options -->
PCHVML_TOKEN_VCM_TREE|"
"
PCHVML_TOKEN_START_TAG|<hvml target=getMember(getVariable("REQ"), "target")>
PCHVML_TOKEN_VCM_TREE|"
    "
PCHVML_TOKEN_START_TAG|<body>
PCHVML_TOKEN_VCM_TREE|"

        "
PCHVML_TOKEN_START_TAG|<inherit>
PCHVML_TOKEN_VCM_TREE|"
        "
PCHVML_TOKEN_VCM_TREE|concatString(callGetter(getMember(getMember(getVariable("STREAM"), "stdout"), "writelines"), "Start of 'Hello, world!'"), ";
        ")
PCHVML_TOKEN_END_TAG|</inherit>
PCHVML_TOKEN_VCM_TREE|"

        "
PCHVML_TOKEN_COMMENT|<!--
            $SYS.locale returns the current system locale like `zh_CN'.
            This statement loads a JSON file which defined the map of
            localization messages, like:
            {
            "Hello, world!": "世界，您好！"
            }
        -->
PCHVML_TOKEN_VCM_TREE|"
        "
PCHVML_TOKEN_START_TAG|<update on=getMember(getVariable("T"), "map") from=concatString("messages/", getMember(getVariable("SYS"), "locale")) to="merge"/>
PCHVML_TOKEN_VCM_TREE|"

        "
PCHVML_TOKEN_COMMENT|<!--
            This statement defines an operation set, which output
            an HTML fragment.

            An operation set of HVML is similiar to a function or a closure
            in other languages.
        -->
PCHVML_TOKEN_VCM_TREE|"
        "
PCHVML_TOKEN_START_TAG|<define as="output_html">
PCHVML_TOKEN_VCM_TREE|"
        "
PCHVML_TOKEN_START_TAG|<h1>
PCHVML_TOKEN_VCM_TREE|"HVML"
PCHVML_TOKEN_END_TAG|</h1>
PCHVML_TOKEN_VCM_TREE|"
        "
PCHVML_TOKEN_START_TAG|<p>
PCHVML_TOKEN_VCM_TREE|getVariable("?")
PCHVML_TOKEN_END_TAG|</p>
PCHVML_TOKEN_VCM_TREE|"
        "
PCHVML_TOKEN_END_TAG|</define>
PCHVML_TOKEN_VCM_TREE|"

        "
PCHVML_TOKEN_COMMENT|<!--
            This statement defines an operation set, which output
            a text line to STDOUT.
        -->
PCHVML_TOKEN_VCM_TREE|"
        "
PCHVML_TOKEN_START_TAG|<define as="output_void">
PCHVML_TOKEN_VCM_TREE|"
        "
PCHVML_TOKEN_START_TAG|<inherit>
PCHVML_TOKEN_VCM_TREE|"
        "
PCHVML_TOKEN_VCM_TREE|callGetter(getMember(getMember(getVariable("STREAM"), "stdout"), "writelines"), getVariable("?"))
PCHVML_TOKEN_END_TAG|</inherit>
PCHVML_TOKEN_VCM_TREE|"
        "
PCHVML_TOKEN_END_TAG|</define>
PCHVML_TOKEN_VCM_TREE|"

        "
PCHVML_TOKEN_COMMENT|<!--
            This statement includes one of the operation sets defined above
            according to the value of `target` attribute of `hvml` element,
            and pass the result returned by `$T.get('Hello, world!')`.
        -->
PCHVML_TOKEN_VCM_TREE|"
        "
PCHVML_TOKEN_START_TAG|<include with=getVariable(concatString("output_", getMember(getVariable("CRTN"), "target"))) on=callGetter(getMember(getVariable("T"), "get"), "Hello, world!")/>
PCHVML_TOKEN_VCM_TREE|"

        "
PCHVML_TOKEN_START_TAG|<inherit>
PCHVML_TOKEN_VCM_TREE|"
        "
PCHVML_TOKEN_VCM_TREE|concatString(callGetter(getMember(getMember(getVariable("STREAM"), "stdout"), "writelines"), "End of 'Hello, world!'"), ";
        ")
PCHVML_TOKEN_END_TAG|</inherit>
PCHVML_TOKEN_VCM_TREE|"

    "
PCHVML_TOKEN_END_TAG|</body>
PCHVML_TOKEN_VCM_TREE|"
"
PCHVML_TOKEN_END_TAG|</hvml>
