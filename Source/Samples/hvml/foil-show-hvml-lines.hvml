#!/usr/bin/env purc

<!DOCTYPE hvml SYSTEM 'f: FS.FS FS.FILE'>
<hvml target="html">
    <head>
        <base href=$CRTN.base!( "file://$SYS.cwd/" ) hvml:silently />
        <title>Foil Test Workshop</title>
        <style hvml:raw>
header h1 {
    color:red;
    text-align:center
}

.column {
    display:inline-block;
    width:45%;
}

.plain-list {
    list-style-type:none;
    margin:0px;
}

.case-lines {
    appearance:progress-bar;
    width:10em;
}

.case-mark {
    appearance:meter-mark;
    width:1em;
    -foil-candidate-marks:'✗…↷↻?✓';
}

.total-progress {
    appearance:progress-bar;
    width:60%;
}

.border-green {
    border-style: solid;
    border-width: thick;
    border-color: green;
}

.fixed-rb {
    position:fixed;
    right:1em;
    bottom:1em;
}
        </style>
    </head>

    <body>
        <init as 'all_cases' with $FS.list_prt("$SYS.cwd/hvml", '*.hvml') >
            <catch for `ANY`>
                <inherit>
                    $STREAM.stdout.writelines("Failed to get HVML program list in `$SYS.cwd/hvml` directoy (exception: $?.name)!")
                </inherit>

                <exit with false />
            </catch>
        </init>

        <test with $L.eq($DATA.count($all_cases), 0L) >
            <inherit>
                $STREAM.stdout.writelines("No any HVML program in the `$SYS.cwd/hvml/` directory!")
            </inherit>

            <exit with false />
        </test>

        <!-- discard some members -->
        <!-- test with $L.gt($DATA.count($all_cases), 50L) >
            <init as 'count' with $DATA.count($all_cases) temp />
            <iterate on 50L onlyif $L.lt($0~, $count)
                    with $DATA.arith('+', $0~, 1) nosetotail >
                <update on $all_cases at "[50]" to 'remove' />
            </iterate>
        </test>

        <test with $L.gt($DATA.count($all_cases), 50L) >
            <inherit>
                $STREAM.stdout.writelines("Too many files: $DATA.count($all_cases)!")
            </inherit>

            <exit with false />
        </test-->

        <header>
            <h1>Counting Lines in HVML Programs (total $DATA.count($all_cases) files)</h1>
        </header>

        <sort on $all_cases ascendingly />

        <!-- trim suffix .hvml and split all cases to two parts -->
        <init as 'cases_part_one' with [] />
        <init as 'cases_part_two' with [] />
        <iterate on $all_cases>
            <init as 'case_name' with $STR.substr($?, 0, -5L) temp />
            <test with $DATA.arith('%', $%, 2) >
                <update on $cases_part_one to 'append' with $case_name />

                <differ>
                    <update on $cases_part_two to 'append' with $case_name />
                </differ>
            </test>
            <update on $all_cases at "[$%]" with $case_name />
        </iterate>

        <define as 'one_column'>
            <init as 'array_name' with $? temp />
            <div class="column">
                <ul class="plain-list">
                    <iterate on ${$array_name}>
                        <init as 'case_name' with $? temp />
                        <li>
                            <span class="case-name">$case_name: </span>
                            <meter class="case-mark" id="case-mark-$case_name" value="20" min="0" max="100" low="20" high="90" optimum="95"></meter>
                            <!-- progress class="case-lines" id="progress-$case_name" max="200"></progress -->
                        </li>
                    </iterate>
                </ul>
            </div>
        </define>

        <div>
            <execute with $one_column on 'cases_part_one' />
            <execute with $one_column on 'cases_part_two' />
        </div>

        <init as 'cases_part_one' with undefined />
        <init as 'cases_part_two' with undefined />
        <init as 'nr_total_cases' with $DATA.count($all_cases) />

        <div>
            <p>
                <label for="totalProgress">Total progress: </label>
                <progress id="totalProgress" class="total-progress" value="0" max="$nr_total_cases"></progress>
            </p>
            <div class="border-green fixed-rb">
                HVML&reg; Community &copy; 2023
            </div>
        </div>

        <define as 'count_lines_in_file' >
            <init as 'lines' with $FILE.txt.head($?) temp>
                <catch for `ANY`>
                    <return with -1L />
                </catch>
            </init>
            <return with $DATA.count($lines) />
        </define>

        <init as 'total_idx' at '_root' with 0L />
        <init as 'total_lines' at '_root' with 0L />
        <init as 'failed_cases' at '_root' with [] />
        <observe on $CRTN for 'idle'>
            <choose on $all_cases[$total_idx] >
                <init as 'case_name' with $? temp />
                <init as 'file_name' with "$SYS.cwd/hvml/$?.hvml" temp />

                <update on "#case-mark-$case_name" at 'attr.value' with "60" />
                <call on $count_lines_in_file with $file_name >

                    <!-- inherit>
                        $STREAM.stdout.writelines("result: $?")
                    </inherit -->

                    <test with $L.ge($?, 0L) >
                        <update on "#case-mark-$case_name" at 'attr.value' with "100" />
                        <!-- update on "#progress-$case_name" at 'attr.value' with "$2?" /-->

                        <differ>
                            <update on $failed_cases to 'append' with $case_name />
                            <update on "#case-mark-$case_name" at 'attr.value' with "0" />
                            <!-- update on "#progress-$case_name" at 'attr.value' with "0" /-->
                        </differ>
                    </test>

                    <init as 'total_lines' at '_root' with $DATA.arith('+', $?, $total_lines) />
                </call>

                <init as 'total_idx' at '_root' with $DATA.arith('+', $total_idx, 1L) />
                <update on "#totalProgress" at 'attr.value' with "$total_idx" />

                <test with $L.ge($total_idx, $nr_total_cases) >
                    <!-- iterate on $all_cases>
                        <update on "#progress-$?" at 'attr.max' with "$max_lines" />
                    </iterate -->

                    <inherit>
                        $STREAM.stdout.writelines("Total lines in $nr_total_cases files: $total_lines")
                    </inherit>

                    <test with $failed_cases>

                        <inherit>
                            $STREAM.stdout.writelines("Files failed to open:")
                        </inherit>

                        <iterate on $failed_cases>
                            <inherit>
                                $STREAM.stdout.writelines($?)
                            </inherit>
                        </iterate>
                    </test>

                    <exit with $total_lines />
                </test>

            </choose>
        </observe>

    </body>
</hvml>

